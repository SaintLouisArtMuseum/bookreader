import { ModalManagerHostBridgeInterface } from './modal-manager-host-bridge-interface';
import { ModalManagerInterface } from './modal-manager-interface';
import { ModalManagerMode } from './modal-manager-mode';
/**
 * The `ModalManagerHostBridge` is a bridge between the `ModalManager` and the
 * host that sets up environment-specific changes when the modal opens and closes.
 *
 * For instance, when the modal opens, this adds a class to the `<body>` tag for styling
 * and adds a `resize` listener to fix a Safari shadow root issue.
 *
 * Consumers can create their own `ModalManagerHostBridgeInterface` classes and pass
 * them into the `ModalManager` if this one does not work for their environment.
 *
 * @export
 * @class ModalManagerHostBridge
 * @implements {ModalManagerHostBridgeInterface}
 */
export declare class ModalManagerHostBridge implements ModalManagerHostBridgeInterface {
    private modalManager;
    constructor(modalManager: ModalManagerInterface);
    /**
     * Handle the mode change
     *
     * @private
     * @memberof ModalManager
     */
    handleModeChange(mode: ModalManagerMode): void;
    private windowResizeThrottler;
    private updateModalContainerHeight;
    private stopDocumentScroll;
    private resumeDocumentScroll;
    private startResizeListener;
    private stopResizeListener;
}
