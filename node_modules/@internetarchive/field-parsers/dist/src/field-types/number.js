export class NumberParser {
    /** @inheritdoc */
    parseValue(rawValue) {
        if (typeof rawValue === 'number')
            return rawValue;
        if (typeof rawValue === 'boolean')
            return undefined;
        const value = parseFloat(rawValue);
        if (Number.isNaN(value)) {
            return undefined;
        }
        return value;
    }
}
// use a shared static instance for performance instead of
// instantiating a new instance for every use
NumberParser.shared = new NumberParser();
//# sourceMappingURL=number.js.map