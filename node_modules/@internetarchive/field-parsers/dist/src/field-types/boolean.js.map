{"version":3,"file":"boolean.js","sourceRoot":"","sources":["../../../src/field-types/boolean.ts"],"names":[],"mappings":"AAKA,MAAM,OAAO,aAAa;IAKxB,kBAAkB;IAClB,UAAU,CAAC,QAA6B;QACtC,IACE,OAAO,QAAQ,KAAK,QAAQ;YAC5B,CAAC,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,GAAG,CAAC,EAC1C;YACA,OAAO,KAAK,CAAC;SACd;QACD,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC3B,CAAC;;AAbD,0DAA0D;AAC1D,6CAA6C;AACtC,oBAAM,GAAG,IAAI,aAAa,EAAE,CAAC","sourcesContent":["import {\n  FieldParserInterface,\n  FieldParserRawValue,\n} from '../field-parser-interface';\n\nexport class BooleanParser implements FieldParserInterface<boolean> {\n  // use a shared static instance for performance instead of\n  // instantiating a new instance for every use\n  static shared = new BooleanParser();\n\n  /** @inheritdoc */\n  parseValue(rawValue: FieldParserRawValue): boolean {\n    if (\n      typeof rawValue === 'string' &&\n      (rawValue === 'false' || rawValue === '0')\n    ) {\n      return false;\n    }\n    return Boolean(rawValue);\n  }\n}\n"]}