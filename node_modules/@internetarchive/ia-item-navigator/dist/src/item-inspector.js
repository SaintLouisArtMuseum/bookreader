import { __decorate } from "tslib";
import { css, html, LitElement, customElement, property, state, } from 'lit-element';
let IaItemInspector = class IaItemInspector extends LitElement {
    constructor() {
        super(...arguments);
        this.itemMD = {
            files: [],
            metadata: { identifier: '' },
        };
        this.baseHost = 'archive.org';
        this.menuProviders = {};
        this.menuShortcuts = [];
        this.sideMenuOpen = false;
        this.fileCount = 0;
        this.loaded = false;
    }
    firstUpdated() {
        this.loaded = true;
        console.log('firstUpdateed', this.loaded);
    }
    updated(changed) {
        if (changed.has('itemMD')) {
            this.parseItemInfo();
        }
        if (changed.has('loaded')) {
            this.emitLoadingStatusUpdate(this.loaded);
        }
    }
    emitLoadingStatusUpdate(loaded) {
        const event = new CustomEvent('loadingStateUpdated', { detail: { loaded } });
        this.dispatchEvent(event);
    }
    parseItemInfo() {
        var _a, _b;
        this.fileCount = ((_b = (_a = this.itemMD) === null || _a === void 0 ? void 0 : _a.files) === null || _b === void 0 ? void 0 : _b.length) || 0;
    }
    get imageUrl() {
        const { metadata } = this.itemMD;
        return `${this.baseHost}/services/img/${metadata === null || metadata === void 0 ? void 0 : metadata.identifier}`;
    }
    render() {
        return html `
      <section>
        <img src=${this.imageUrl} alt="default item" />
        <div>
          <h3>Welcome to item:</h3>
          <p>foo</p>
        </div>
      </section>
    `;
    }
    static get styles() {
        const main = css `
      :host {
        display: block;
        width: 100%;
        margin: 0 auto;
      }

      section {
        display: flex;
      }
    `;
        return [main];
    }
};
__decorate([
    property({ type: Object })
], IaItemInspector.prototype, "itemMD", void 0);
__decorate([
    property({ type: String })
], IaItemInspector.prototype, "baseHost", void 0);
__decorate([
    property({ type: Object })
], IaItemInspector.prototype, "menuProviders", void 0);
__decorate([
    property({ type: Array })
], IaItemInspector.prototype, "menuShortcuts", void 0);
__decorate([
    property({ type: Boolean })
], IaItemInspector.prototype, "sideMenuOpen", void 0);
__decorate([
    state()
], IaItemInspector.prototype, "fileCount", void 0);
__decorate([
    state()
], IaItemInspector.prototype, "loaded", void 0);
IaItemInspector = __decorate([
    customElement('ia-item-inspector')
], IaItemInspector);
export { IaItemInspector };
//# sourceMappingURL=item-inspector.js.map