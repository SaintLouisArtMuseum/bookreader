import { LitElement, TemplateResult } from 'lit';
type sortOptions = 'title_asc' | 'title_desc' | 'default';
type ItemInfo = {
    url_path: string;
    image: string;
    title: string;
    author: string;
    file_subprefix: string;
    file_source: string;
    file_origin?: string;
};
export declare const viewableFilesIcon: TemplateResult<1>;
export declare class IauxSortFilesButton extends LitElement {
    fileListRaw: any[];
    fileListSorted: any[];
    sortOrderBy: sortOptions;
    render(): TemplateResult<1>;
    get sortButton(): TemplateResult<1>;
    sortVolumes(sortType: sortOptions): void;
    static get styles(): import("lit").CSSResult;
}
export declare class IauxViewableFiles extends LitElement {
    baseHost: string;
    sortOrderBy: 'default' | 'title_asc' | 'title_desc';
    subPrefix: string;
    fileList: any[];
    addSortToUrl: boolean;
    firstUpdated(): void;
    volumeItemWithImageTitle(item: ItemInfo): TemplateResult<1>;
    fileUrl(item: ItemInfo): string;
    get pdfLabel(): TemplateResult;
    fileLi(item: ItemInfo): TemplateResult;
    get fileListTemplate(): TemplateResult;
    render(): TemplateResult<1>;
    static get styles(): import("lit").CSSResult;
}
export {};
