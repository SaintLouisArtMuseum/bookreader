import { __decorate } from "tslib";
import { css, customElement, html, LitElement, property, query, } from 'lit-element';
let DevCheckbox = class DevCheckbox extends LitElement {
    checkboxToggled() {
        const event = new CustomEvent('valueChanged', {
            detail: {
                checked: this.checkbox.checked,
            },
        });
        this.dispatchEvent(event);
    }
    render() {
        return html `
      <label for="dev-check">${this.label}</label>
      <input type="checkbox" id="dev-check" @input=${this.checkboxToggled} />
    `;
    }
    static get styles() {
        const labelWidth = css `var(--dev-label-width, 15rem)`;
        return css `
      label {
        display: inline-block;
        width: ${labelWidth};
      }
    `;
    }
};
__decorate([
    property()
], DevCheckbox.prototype, "label", void 0);
__decorate([
    query('input[type=checkbox]')
], DevCheckbox.prototype, "checkbox", void 0);
DevCheckbox = __decorate([
    customElement('dev-checkbox')
], DevCheckbox);
export { DevCheckbox };
//# sourceMappingURL=dev-checkbox.js.map