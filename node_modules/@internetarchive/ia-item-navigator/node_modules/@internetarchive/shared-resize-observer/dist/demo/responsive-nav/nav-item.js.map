{"version":3,"file":"nav-item.js","sourceRoot":"","sources":["../../../demo/responsive-nav/nav-item.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,IAAI,EACJ,GAAG,EACH,UAAU,EAGV,QAAQ,EACR,aAAa,EACb,KAAK,GACN,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAG3D,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,UAAU;IAAjD;;QAC8B,SAAI,GAC9B,qBAAqB,CAAC,QAAQ,CAAC;IAqFnC,CAAC;IApEC,IAAI,kBAAkB;QACpB,OAAO,CACL,IAAI,CAAC,0BAA0B,CAAC,WAAW;YAC3C,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAC5C,CAAC;IACJ,CAAC;IAED,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC;IACrD,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;oBACK,IAAI,CAAC,IAAI;6BACA,IAAI,CAAC,IAAI;6BACT,IAAI,CAAC,IAAI;;0CAEI,IAAI,CAAC,IAAI;0CACT,IAAI,CAAC,IAAI;KAC9C,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,MAAM;QACf,MAAM,QAAQ,GAAG,GAAG,CAAA,wCAAwC,CAAC;QAC7D,MAAM,QAAQ,GAAG,GAAG,CAAA,wCAAwC,CAAC;QAC7D,MAAM,WAAW,GAAG,GAAG,CAAA,uCAAuC,CAAC;QAC/D,MAAM,WAAW,GAAG,GAAG,CAAA,yCAAyC,CAAC;QAEjE,OAAO,GAAG,CAAA;;;;;;;;iBAQG,QAAQ;qBACJ,WAAW;;;;iBAIf,QAAQ;;;;iBAIR,WAAW;kBACV,WAAW;;;;gBAIb,QAAQ;;;;gBAIR,QAAQ;;;;;;;;;;;;KAYnB,CAAC;IACJ,CAAC;CACF,CAAA;AAtF6B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;+CACM;AAEL;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;+CAAuB;AAEtB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;+CAAe;AAE1B;IAAf,KAAK,CAAC,OAAO,CAAC;wDAAiC;AAEhC;IAAf,KAAK,CAAC,OAAO,CAAC;wDAAiC;AAMjB;IAA9B,KAAK,CAAC,sBAAsB,CAAC;qEAA8C;AAC7C;IAA9B,KAAK,CAAC,sBAAsB,CAAC;qEAA8C;AAjBjE,iBAAiB;IAD7B,aAAa,CAAC,qBAAqB,CAAC;GACxB,iBAAiB,CAuF7B;SAvFY,iBAAiB","sourcesContent":["import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  CSSResult,\n  property,\n  customElement,\n  query,\n} from 'lit-element';\nimport { ResponsiveNavMenuMode } from './models/menu-mode';\n\n@customElement('responsive-nav-item')\nexport class ResponsiveNavItem extends LitElement {\n  @property({ type: String }) mode: ResponsiveNavMenuMode =\n    ResponsiveNavMenuMode.IconText;\n\n  @property({ type: Object }) icon?: TemplateResult;\n\n  @property({ type: String }) text?: string;\n\n  @query('.icon') iconContainer!: HTMLSpanElement;\n\n  @query('.text') textContainer!: HTMLSpanElement;\n\n  // This is a special element that stays visible but offscreen\n  // to estimate the full width of this element for sizing\n  // This is needed because the element width becomes 0 when you hide it\n  // so you can't calculate the proper width\n  @query('.text.size-estimator') textSizeEstimatorContainer!: HTMLSpanElement;\n  @query('.icon.size-estimator') iconSizeEstimatorContainer!: HTMLSpanElement;\n\n  get estimatedFullWidth(): number {\n    return (\n      this.iconSizeEstimatorContainer.clientWidth +\n      this.textSizeEstimatorContainer.clientWidth\n    );\n  }\n\n  get estimatedIconOnlyWidth(): number {\n    return this.iconSizeEstimatorContainer.clientWidth;\n  }\n\n  render(): TemplateResult {\n    return html`\n      <div class=\"${this.mode} container\">\n        <span class=\"icon\">${this.icon}</span>\n        <span class=\"text\">${this.text}</span>\n      </div>\n      <span class=\"icon size-estimator\">${this.icon}</span>\n      <span class=\"text size-estimator\">${this.text}</span>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    const colorCss = css`var(--responsive-nav-text-color, #ccc)`;\n    const hoverCss = css`var(--responsive-nav-text-color, #eee)`;\n    const iconSizeCss = css`var(--responsive-nav-icon-size, 3rem)`;\n    const fontSizeCss = css`var(--responsive-nav-font-size, 1.4rem)`;\n\n    return css`\n      .container {\n        display: flex;\n        align-items: center;\n        cursor: pointer;\n      }\n\n      .text {\n        color: ${colorCss};\n        font-size: ${fontSizeCss};\n      }\n\n      .container:hover .text {\n        color: ${hoverCss};\n      }\n\n      svg {\n        width: ${iconSizeCss};\n        height: ${iconSizeCss};\n      }\n\n      svg .fill-color {\n        fill: ${colorCss};\n      }\n\n      .container:hover svg .fill-color {\n        fill: ${hoverCss};\n      }\n\n      .container.icon-only .text {\n        display: none;\n      }\n\n      .size-estimator {\n        position: absolute;\n        left: -10000px;\n        visibility: hidden;\n      }\n    `;\n  }\n}\n"]}