/// <reference types="resize-observer-browser" />
import { LitElement, TemplateResult, CSSResult, PropertyValues } from 'lit-element';
import './nav-item';
import './nav-menu';
import type { SharedResizeObserverInterface, SharedResizeObserverResizeHandlerInterface } from '../../index';
import { ResponsiveNavMenuMode } from './models/menu-mode';
import { ResponsiveNavMenu } from './nav-menu';
export declare enum ResponsiveNavLeftMenuMode {
    Full = "full",
    Hamburger = "hamburger"
}
export declare class ResponsiveNav extends LitElement implements SharedResizeObserverResizeHandlerInterface {
    menuGap: number;
    showHiddenItems: boolean;
    showDevOutline: boolean;
    id: string;
    resizeObserver?: SharedResizeObserverInterface;
    navItemSpacing: number;
    leftMenuMode: ResponsiveNavLeftMenuMode;
    leftMenuDisplayMode: ResponsiveNavMenuMode;
    rightMenuDisplayMode: ResponsiveNavMenuMode;
    mainMenu: ResponsiveNavMenu;
    hamburgerMenu: ResponsiveNavMenu;
    rightMenu: ResponsiveNavMenu;
    disconnectedCallback(): void;
    updated(changed: PropertyValues): void;
    handleResize(entry: ResizeObserverEntry): void;
    private get currentLeftMenu();
    private get currentMenuOptions();
    private get baseMenuOptions();
    private get extendedMenuOptions();
    private get rightMenuOptions();
    private get hamburgerMenuOptions();
    private disconnectResizeObserver;
    private setupResizeObserver;
    private get hamburgerMenuTemplate();
    private get mainLeftMenuTemplate();
    private get rightMenuTemplate();
    render(): TemplateResult;
    static get styles(): CSSResult;
}
