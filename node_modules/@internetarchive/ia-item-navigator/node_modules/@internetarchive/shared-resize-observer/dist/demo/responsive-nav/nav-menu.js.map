{"version":3,"file":"nav-menu.js","sourceRoot":"","sources":["../../../demo/responsive-nav/nav-menu.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,GAAG,EAEH,aAAa,EACb,IAAI,EACJ,UAAU,EACV,QAAQ,EAER,QAAQ,GAET,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAK3D,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,UAAU;IAAjD;;QAEE,gBAAW,GAA8B,EAAE,CAAC;QAG5C,aAAQ,GAA0B,qBAAqB,CAAC,QAAQ,CAAC;QAIrC,mBAAc,GAAG,EAAE,CAAC;IA6ElD,CAAC;IA3EC,OAAO,CAAC,OAAuB;QAC7B,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE;YACjC,sEAAsE;YACtE,iDAAiD;YACjD,IAAI,CAAC,KAAK,CAAC,WAAW,CACpB,+BAA+B,EAC/B,GAAG,IAAI,CAAC,cAAc,IAAI,CAC3B,CAAC;SACH;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,WAAW,CAAC,GAAG,CACpB,MAAM,CAAC,EAAE,CAAC,IAAI,CAAA;;;wBAGA,IAAI,CAAC,QAAQ;wBACb,MAAM,CAAC,IAAI;wBACX,MAAM,CAAC,KAAK;;;;WAIzB,CACF;;KAEJ,CAAC;IACJ,CAAC;IAED,2BAA2B;IAC3B,IAAI,iBAAiB;QACnB,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC3B,cAAc,IAAI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QACH,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC;QACtC,OAAO,cAAc,CAAC;IACxB,CAAC;IAED,gCAAgC;IAChC,IAAI,qBAAqB;QACvB,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC5C,OAAO,CACL,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,sBAAsB,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YACjE,cAAc;YAChB,IAAI,CAAC,cAAc,CACpB,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,MAAM;QACf,MAAM,cAAc,GAAG,GAAG,CAAA,0CAA0C,CAAC;QAErE,OAAO,GAAG,CAAA;;;;;;;;;;;;;wBAaU,cAAc;;;;;;;KAOjC,CAAC;IACJ,CAAC;CACF,CAAA;AApFC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;sDACkB;AAG5C;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;mDACsC;AAEhC;IAAhC,QAAQ,CAAC,qBAAqB,CAAC;mDAAgC;AAEpC;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yDAAqB;AATrC,iBAAiB;IAD7B,aAAa,CAAC,qBAAqB,CAAC;GACxB,iBAAiB,CAsF7B;SAtFY,iBAAiB","sourcesContent":["import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  queryAll,\n  TemplateResult,\n} from 'lit-element';\nimport { ResponsiveNavMenuMode } from './models/menu-mode';\nimport { ResponsiveNavMenuOption } from './models/menu-option';\nimport { ResponsiveNavItem } from './nav-item';\n\n@customElement('responsive-nav-menu')\nexport class ResponsiveNavMenu extends LitElement {\n  @property({ type: Array })\n  menuOptions: ResponsiveNavMenuOption[] = [];\n\n  @property({ type: String })\n  itemMode: ResponsiveNavMenuMode = ResponsiveNavMenuMode.IconText;\n\n  @queryAll('responsive-nav-item') navItems!: ResponsiveNavItem[];\n\n  @property({ type: Number }) navItemSpacing = 10;\n\n  updated(changed: PropertyValues): void {\n    if (changed.has('navItemSpacing')) {\n      // this keeps our JS and CSS in sync so the JS can calculate the width\n      // for changing modes and the CSS spaces properly\n      this.style.setProperty(\n        '--responsive-nav-item-spacing',\n        `${this.navItemSpacing}px`\n      );\n    }\n  }\n\n  render(): TemplateResult {\n    return html`\n      <ul>\n        ${this.menuOptions.map(\n          option => html`\n            <li>\n              <responsive-nav-item\n                .mode=${this.itemMode}\n                .icon=${option.icon}\n                .text=${option.title}\n              >\n              </responsive-nav-item>\n            </li>\n          `\n        )}\n      </ul>\n    `;\n  }\n\n  // the estimated full width\n  get estimateFullWidth(): number {\n    let estimatedWidth = 0;\n    this.navItems.forEach(item => {\n      estimatedWidth += item.estimatedFullWidth + this.navItemSpacing + 2;\n    });\n    estimatedWidth -= this.navItemSpacing;\n    return estimatedWidth;\n  }\n\n  // the estimated icon-only width\n  get estimateIconOnlyWidth(): number {\n    const totalMenuItems = this.navItems.length;\n    return (\n      (this.navItems[0].estimatedIconOnlyWidth + this.navItemSpacing + 2) *\n        totalMenuItems -\n      this.navItemSpacing\n    );\n  }\n\n  static get styles(): CSSResult {\n    const navItemSpacing = css`var(--responsive-nav-item-spacing, 10px)`;\n\n    return css`\n      :host {\n        display: inline-block;\n      }\n\n      ul {\n        display: inline-block;\n        margin: 0;\n        padding: 0;\n      }\n\n      li {\n        display: inline-block;\n        margin-right: ${navItemSpacing};\n        padding: 0;\n      }\n\n      li:last-child {\n        margin-right: 0;\n      }\n    `;\n  }\n}\n"]}