import { __decorate } from "tslib";
import { css, html, LitElement } from 'lit';
import { customElement, property } from 'lit/decorators.js';
import ipadIcon from './icons/ipad';
import iphoneIcon from './icons/iphone';
import macbookIcon from './icons/macbook';
export var Device;
(function (Device) {
    Device["iPad"] = "ipad";
    Device["iPhone"] = "iphone";
    Device["macBook"] = "macbook";
})(Device || (Device = {}));
let ResponsiveDevice = class ResponsiveDevice extends LitElement {
    constructor() {
        super(...arguments);
        this.device = Device.iPhone;
    }
    render() {
        return html ` ${this.deviceIcon} `;
    }
    get deviceIcon() {
        switch (this.device) {
            case Device.iPad:
                return ipadIcon;
            case Device.iPhone:
                return iphoneIcon;
            case Device.macBook:
                return macbookIcon;
        }
    }
    static get styles() {
        return css `
      :host {
        display: block;
        background-color: #999;
        border-radius: 50%;
        padding: 2rem;
      }

      svg {
        width: 100%;
        height: 100%;
      }
    `;
    }
};
__decorate([
    property()
], ResponsiveDevice.prototype, "device", void 0);
ResponsiveDevice = __decorate([
    customElement('responsive-device')
], ResponsiveDevice);
export { ResponsiveDevice };
//# sourceMappingURL=responsive-device.js.map