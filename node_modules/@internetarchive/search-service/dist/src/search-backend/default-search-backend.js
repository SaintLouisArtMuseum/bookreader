import { SearchServiceError, SearchServiceErrorType, } from '../search-service-error';
/**
 * The DefaultSearchBackend performs a `window.fetch` request to archive.org
 */
export class DefaultSearchBackend {
    constructor(baseUrl = 'archive.org') {
        this.baseUrl = baseUrl;
    }
    async performSearch(params) {
        const urlSearchParam = params.asUrlSearchParams;
        const queryAsString = urlSearchParam.toString();
        const url = `https://${this.baseUrl}/advancedsearch.php?${queryAsString}`;
        return this.fetchUrl(url);
    }
    async fetchMetadata(identifier) {
        const url = `https://${this.baseUrl}/metadata/${identifier}`;
        return this.fetchUrl(url);
    }
    async fetchUrl(url) {
        let response;
        // first try the fetch and return a networkError if it fails
        try {
            response = await fetch(url);
        }
        catch (err) {
            const message = err instanceof Error ? err.message : err;
            return this.getErrorResult(SearchServiceErrorType.networkError, message);
        }
        // then try json decoding and return a decodingError if it fails
        try {
            const json = await response.json();
            // the advanced search endpoint doesn't return an HTTP Error 400
            // and instead returns an HTTP 200 with an `error` key in the payload
            const error = json['error'];
            if (error) {
                const forensics = json['forensics'];
                return this.getErrorResult(SearchServiceErrorType.searchEngineError, error, forensics);
            }
            else {
                // success
                return { success: json };
            }
        }
        catch (err) {
            const message = err instanceof Error ? err.message : err;
            return this.getErrorResult(SearchServiceErrorType.decodingError, message);
        }
    }
    getErrorResult(errorType, message, details) {
        const error = new SearchServiceError(errorType, message, details);
        const result = { error };
        return result;
    }
}
//# sourceMappingURL=default-search-backend.js.map