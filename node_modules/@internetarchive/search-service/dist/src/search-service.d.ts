import { SearchResponse } from './responses/search/search-response';
import { SearchParams } from './search-params';
import { MetadataResponse } from './responses/metadata/metadata-response';
import { SearchServiceError } from './search-service-error';
import { SearchServiceInterface } from './search-service-interface';
import { SearchBackendInterface } from './search-backend/search-backend-interface';
import { Result } from '@internetarchive/result-type';
/**
 * The Search Service is responsible for taking the raw response provided by
 * the Search Backend and modeling it as a `SearchResponse` or `MetadataResponse`
 * object, depending on the type of response.
 */
export declare class SearchService implements SearchServiceInterface {
    static default: SearchServiceInterface;
    private searchBackend;
    constructor(searchBackend: SearchBackendInterface);
    /** @inheritdoc */
    search(params: SearchParams): Promise<Result<SearchResponse, SearchServiceError>>;
    /** @inheritdoc */
    fetchMetadata(identifier: string): Promise<Result<MetadataResponse, SearchServiceError>>;
}
