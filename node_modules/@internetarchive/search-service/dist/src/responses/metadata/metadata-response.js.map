{"version":3,"file":"metadata-response.js","sourceRoot":"","sources":["../../../../src/responses/metadata/metadata-response.ts"],"names":[],"mappings":"AAAA,uDAAuD;AACvD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AACjD,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAG7C;;;;;GAKG;AACH,MAAM,OAAO,gBAAgB;IA+B3B,YAAY,IAAyB;;QACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,MAAA,IAAI,CAAC,KAAK,0CAAE,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,GAAG,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACtE,CAAC;CACF","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { File } from '../../models/file';\nimport { Metadata } from '../../models/metadata';\nimport { Review } from '../../models/review';\nimport { SpeechMusicASREntry } from '../../models/speech-music-asr-entry';\n\n/**\n * The main top-level reponse when fetching Metadata\n *\n * @export\n * @class MetadataResponse\n */\nexport class MetadataResponse {\n  rawResponse: any;\n\n  created: number;\n\n  d1: string;\n\n  d2: string;\n\n  dir: string;\n\n  files: File[];\n\n  files_count: number;\n\n  item_last_updated: number;\n\n  item_size: number;\n\n  metadata: Metadata;\n\n  server: string;\n\n  uniq: number;\n\n  workable_servers: string[];\n\n  speech_vs_music_asr?: SpeechMusicASREntry[];\n\n  reviews?: Review[];\n\n  constructor(json: Record<string, any>) {\n    this.rawResponse = json;\n    this.created = json.created;\n    this.d1 = json.d1;\n    this.d2 = json.d2;\n    this.dir = json.dir;\n    this.files = json.files?.map((file: any) => new File(file));\n    this.files_count = json.files_count;\n    this.item_last_updated = json.item_last_updated;\n    this.item_size = json.item_size;\n    this.metadata = new Metadata(json.metadata);\n    this.server = json.server;\n    this.uniq = json.uniq;\n    this.workable_servers = json.workable_servers;\n    this.speech_vs_music_asr = json.speech_vs_music_asr;\n    this.reviews = json.reviews?.map((entry: any) => new Review(entry));\n  }\n}\n"]}