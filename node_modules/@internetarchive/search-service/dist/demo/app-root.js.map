{"version":3,"file":"app-root.js","sourceRoot":"","sources":["../../demo/app-root.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  internalProperty,\n  LitElement,\n  query,\n  TemplateResult,\n} from 'lit-element';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\nimport { nothing } from 'lit-html';\nimport { Metadata } from '../src/models/metadata';\nimport { MetadataResponse } from '../src/responses/metadata/metadata-response';\nimport { SearchResponse } from '../src/responses/search/search-response';\nimport { SearchParams } from '../src/search-params';\nimport { SearchService } from '../src/search-service';\nimport { SearchServiceInterface } from '../src/search-service-interface';\n\n@customElement('app-root')\nexport class AppRoot extends LitElement {\n  private searchService: SearchServiceInterface = SearchService.default;\n\n  @query('#search-input')\n  private searchInput!: HTMLInputElement;\n\n  @query('#metadata-input')\n  private metadataInput!: HTMLInputElement;\n\n  @internalProperty()\n  private searchResponse?: SearchResponse;\n\n  @internalProperty()\n  private metadataResponse?: MetadataResponse;\n\n  private get searchResults(): Metadata[] | undefined {\n    return this.searchResponse?.response.docs;\n  }\n\n  /** @inheritdoc */\n  render(): TemplateResult {\n    return html`\n      <fieldset>\n        <legend>Search</legend>\n        <form>\n          <label>Search</label>\n          <input type=\"text\" id=\"search-input\" placeholder=\"Search Term\" />\n          <input type=\"submit\" value=\"Search\" @click=${this.search} />\n        </form>\n        <form>\n          <label>Metadata</label>\n          <input type=\"text\" id=\"metadata-input\" placeholder=\"Identifier\" />\n          <input\n            type=\"submit\"\n            value=\"Get Metadata\"\n            @click=${this.getMetadata}\n          />\n        </form>\n      </fieldset>\n\n      ${this.searchResults ? this.resultsTemplate : nothing}\n      ${this.metadataResponse ? this.metadataTemplate : nothing}\n    `;\n  }\n\n  private get resultsTemplate(): TemplateResult {\n    return html`\n      <h2>Search Results</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Identifier</th>\n            <th>Title</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${this.searchResults?.map(metadata => {\n            return html`\n              <tr>\n                <td>${metadata.identifier}</td>\n                <td>${metadata.title?.value}</td>\n              </tr>\n            `;\n          })}\n        </tbody>\n      </table>\n    `;\n  }\n\n  private get metadataTemplate(): TemplateResult {\n    const rawMetadata = this.metadataResponse?.metadata.rawMetadata;\n    if (!rawMetadata) return html`${nothing}`;\n\n    return html`\n      <h2>Metadata Response</h2>\n      <table>\n        ${Object.keys(rawMetadata).map(\n          key => html`\n            <tr>\n              <td>${key}</td>\n              <td>${unsafeHTML(rawMetadata[key])}</td>\n            </tr>\n          `\n        )}\n      </table>\n    `;\n  }\n\n  async getMetadata(e: Event): Promise<void> {\n    e.preventDefault();\n    const identifier = this.metadataInput.value;\n    const result = await this.searchService.fetchMetadata(identifier);\n    this.metadataResponse = result?.success;\n  }\n\n  async search(e: Event): Promise<void> {\n    e.preventDefault();\n    const term = this.searchInput.value;\n    const searchParams = new SearchParams({\n      query: term,\n      rows: 10,\n      fields: ['identifier', 'title'],\n    });\n    const result = await this.searchService.search(searchParams);\n    if (result?.success) {\n      this.searchResponse = result?.success;\n    } else {\n      alert(`Oh noes: ${result?.error?.message}`);\n      console.error('Error searching', result?.error);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      /* th {\n        font-weight: bold;\n      } */\n    `;\n  }\n}\n"]}