{"version":3,"file":"plugins/plugin.search.js","mappings":"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","sources":["webpack://@internetarchive/bookreader/./src/plugins/search/view.js","webpack://@internetarchive/bookreader/./src/plugins/search/utils.js","webpack://@internetarchive/bookreader/./src/plugins/search/plugin.search.js","webpack://@internetarchive/bookreader/./node_modules/core-js/internals/number-parse-float.js","webpack://@internetarchive/bookreader/./node_modules/core-js/modules/es.object.entries.js","webpack://@internetarchive/bookreader/./node_modules/core-js/modules/es.parse-float.js"],"sourcesContent":["class SearchView {\r\n  /**\r\n   * @param {object} params\r\n   * @param {object} params.br The BookReader instance\r\n   * @param {function} params.cancelSearch callback when a user wants to cancel search\r\n   *\r\n   * @event BookReader:SearchResultsCleared - when the search results nav gets cleared\r\n   * @event BookReader:ToggleSearchMenu - when search results menu should toggle\r\n   */\r\n  constructor({ br, searchCancelledCallback = () => {} }) {\r\n    this.br = br;\r\n    this.matches = [];\r\n    this.cacheDOMElements();\r\n    this.bindEvents();\r\n    this.cancelSearch = searchCancelledCallback;\r\n  }\r\n\r\n  cacheDOMElements() {\r\n    this.dom = {};\r\n    // Search input within the top toolbar. Will be removed once the mobile menu is replaced.\r\n    this.dom.toolbarSearch = this.buildToolbarSearch();\r\n  }\r\n\r\n  /**\r\n   * @param {string} query\r\n   */\r\n  setQuery(query) {\r\n    this.br.$('[name=\"query\"]').val(query);\r\n  }\r\n\r\n  emptyMatches() {\r\n    this.matches = [];\r\n  }\r\n\r\n  removeResultPins() {\r\n    this.br.$('.BRnavpos .BRsearch').remove();\r\n  }\r\n\r\n  clearSearchFieldAndResults(dispatchEventWhenComplete = true) {\r\n    this.br.removeSearchResults();\r\n    this.removeResultPins();\r\n    this.emptyMatches();\r\n    this.setQuery('');\r\n    this.teardownSearchNavigation();\r\n    if (dispatchEventWhenComplete) {\r\n      this.br.trigger('SearchResultsCleared');\r\n    }\r\n  }\r\n\r\n  toggleSidebar() {\r\n    this.br.trigger('ToggleSearchMenu');\r\n  }\r\n\r\n  renderSearchNavigation() {\r\n    const selector = 'BRsearch-navigation';\r\n    $('.BRnav').before(`\r\n      <div class=\"${selector}\">\r\n        <button class=\"toggle-sidebar\">\r\n          <h4>\r\n            <span class=\"icon icon-search\"></span> Results\r\n          </h4>\r\n        </button>\r\n        <div class=\"pagination\">\r\n          <button class=\"prev\" title=\"Previous result\"><span class=\"icon icon-chevron hflip\"></span></button>\r\n          <span data-id=\"resultsCount\">${this.resultsPosition()}</span>\r\n          <button class=\"next\" title=\"Next result\"><span class=\"icon icon-chevron\"></button>\r\n        </div>\r\n        <button class=\"clear\" title=\"Clear search results\">\r\n          <span class=\"icon icon-close\"></span>\r\n        </button>\r\n      </div>\r\n    `);\r\n    this.dom.searchNavigation = $(`.${selector}`);\r\n  }\r\n\r\n  resultsPosition() {\r\n    let positionMessage = `${this.matches.length} result${this.matches.length === 1 ? '' : 's'}`;\r\n    if (~this.currentMatchIndex) {\r\n      positionMessage = `${this.currentMatchIndex + 1} / ${this.matches.length}`;\r\n    }\r\n    return positionMessage;\r\n  }\r\n\r\n  bindSearchNavigationEvents() {\r\n    if (!this.dom.searchNavigation) { return; }\r\n    const namespace = 'searchNavigation';\r\n\r\n    this.dom.searchNavigation\r\n      .on(`click.${namespace}`, '.clear', this.clearSearchFieldAndResults.bind(this))\r\n      .on(`click.${namespace}`, '.prev', this.showPrevResult.bind(this))\r\n      .on(`click.${namespace}`, '.next', this.showNextResult.bind(this))\r\n      .on(`click.${namespace}`, '.toggle-sidebar', this.toggleSidebar.bind(this))\r\n      .on(`click.${namespace}`, false);\r\n  }\r\n\r\n  showPrevResult() {\r\n    if (this.currentMatchIndex === 0) { return; }\r\n    if (this.br.mode === this.br.constModeThumb) { this.br.switchMode(this.br.constMode1up); }\r\n    if (!~this.currentMatchIndex) {\r\n      this.currentMatchIndex = this.getClosestMatchIndex((start, end, comparator) => end[0] > comparator) + 1;\r\n    }\r\n    this.br.$('.BRnavline .BRsearch').eq(--this.currentMatchIndex).click();\r\n    this.updateResultsPosition();\r\n    this.updateSearchNavigationButtons();\r\n  }\r\n\r\n  showNextResult() {\r\n    if (this.currentMatchIndex + 1 === this.matches.length) { return; }\r\n    if (this.br.mode === this.br.constModeThumb) { this.br.switchMode(this.br.constMode1up); }\r\n    if (!~this.currentMatchIndex) {\r\n      this.currentMatchIndex = this.getClosestMatchIndex((start, end, comparator) => start[start.length - 1] > comparator) - 1;\r\n    }\r\n    this.br.$('.BRnavline .BRsearch').eq(++this.currentMatchIndex).click();\r\n    this.updateResultsPosition();\r\n    this.updateSearchNavigationButtons();\r\n  }\r\n\r\n  /**\r\n   * Obtains closest match based on the logical comparison function passed in.\r\n   * When the comparison function returns true, the starting (left) half of the\r\n   * matches array is used in the binary split, else the ending (right) half is\r\n   * used. A recursive call is made to perform the same split and comparison\r\n   * on the winning half of the matches. This is traditionally known as binary\r\n   * search (https://en.wikipedia.org/wiki/Binary_search_algorithm), and in\r\n   * most cases (medium to large search result arrays) should outperform\r\n   * traversing the array from start to finish. In the case of small arrays,\r\n   * the speed difference is negligible.\r\n   *\r\n   * @param {function} comparisonFn\r\n   * @return {number} matchIndex\r\n   */\r\n  getClosestMatchIndex(comparisonFn) {\r\n    const matchPages = this.matches.map((m) => m.par[0].page);\r\n    const currentPage = this.br.currentIndex() + 1;\r\n    const closestTo = (pool, comparator) => {\r\n      if (pool.length === 1) { return pool[0]; }\r\n      const start = pool.slice(0, pool.length / 2);\r\n      const end = pool.slice(pool.length / 2);\r\n      return closestTo((comparisonFn(start, end, comparator) ? start : end), comparator);\r\n    };\r\n\r\n    const closestPage = closestTo(matchPages, currentPage);\r\n    return this.matches.indexOf(this.matches.find((m) => m.par[0].page === closestPage));\r\n  }\r\n\r\n  updateResultsPosition() {\r\n    if (!this.dom.searchNavigation) return;\r\n    this.dom.searchNavigation.find('[data-id=resultsCount]').text(this.resultsPosition());\r\n  }\r\n\r\n  updateSearchNavigationButtons() {\r\n    if (!this.dom.searchNavigation) return;\r\n    this.dom.searchNavigation.find('.prev').attr('disabled', !this.currentMatchIndex);\r\n    this.dom.searchNavigation.find('.next').attr('disabled', this.currentMatchIndex + 1 === this.matches.length);\r\n  }\r\n\r\n  teardownSearchNavigation() {\r\n    if (!this.dom.searchNavigation) {\r\n      this.dom.searchNavigation = $('.BRsearch-navigation');\r\n    }\r\n    if (!this.dom.searchNavigation.length) { return; }\r\n\r\n    this.dom.searchNavigation.off('.searchNavigation').remove();\r\n    this.dom.searchNavigation = null;\r\n    this.br.resize();\r\n  }\r\n\r\n  setCurrentMatchIndex() {\r\n    let matchingSearchResult;\r\n    if (this.br.mode === this.br.constModeThumb) {\r\n      this.currentMatchIndex = -1;\r\n      return;\r\n    }\r\n    if (this.br.mode === this.br.constMode2up) {\r\n      matchingSearchResult = this.find2upMatchingSearchResult();\r\n    }\r\n    else {\r\n      matchingSearchResult = this.find1upMatchingSearchResult();\r\n    }\r\n    this.currentMatchIndex = this.matches.indexOf(matchingSearchResult);\r\n  }\r\n\r\n  find1upMatchingSearchResult() {\r\n    return this.matches.find((m) => this.br.currentIndex() === m.par[0].page - 1);\r\n  }\r\n\r\n  find2upMatchingSearchResult() {\r\n    return this.matches.find((m) => this.br._isIndexDisplayed(m.par[0].page - 1));\r\n  }\r\n\r\n  updateSearchNavigation() {\r\n    if (!this.matches.length) { return; }\r\n\r\n    this.setCurrentMatchIndex();\r\n    this.updateResultsPosition();\r\n    this.updateSearchNavigationButtons();\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} bool\r\n   */\r\n  togglePinsFor(bool) {\r\n    const pinsVisibleState = bool ? 'visible' : 'hidden';\r\n    this.br.refs.$BRfooter.find('.BRsearch').css({ visibility: pinsVisibleState });\r\n  }\r\n\r\n  buildToolbarSearch() {\r\n    const toolbarSearch = document.createElement('span');\r\n    toolbarSearch.classList.add('BRtoolbarSection', 'BRtoolbarSectionSearch');\r\n    toolbarSearch.innerHTML = `\r\n      <form class=\"BRbooksearch desktop\">\r\n        <input type=\"search\" name=\"query\" class=\"BRsearchInput\" value=\"\" placeholder=\"Search inside\"/>\r\n        <button type=\"submit\" class=\"BRsearchSubmit\">\r\n          <img src=\"/wp-content/themes/slam/dependencies/manuscript/BookReader/images/icon_search_button.svg\" />\r\n        </button>\r\n      </form>\r\n    `;\r\n    return toolbarSearch;\r\n  }\r\n\r\n  /**\r\n   * @param {array} matches\r\n   */\r\n  renderPins(matches) {\r\n    matches.forEach((match) => {\r\n      const pageIndex = this.br.book.leafNumToIndex(match.par[0].page);\r\n      const uiStringSearch = \"Search result\"; // i18n\r\n      const percentThrough = this.br.constructor.util.cssPercentage(pageIndex, this.br.book.getNumLeafs() - 1);\r\n\r\n      let html = match.html;\r\n      if (html.length > 200) {\r\n        const start = Math.max(0, html.indexOf('<mark>') - 100);\r\n        if (start != 0) {\r\n          html = '…' + match.html\r\n            .substring(start)\r\n            // Make sure at word boundary though\r\n            .replace(/^\\S+/, '');\r\n        }\r\n      }\r\n      // draw marker\r\n      $('<div>')\r\n        .addClass('BRsearch')\r\n        .css({\r\n          left: percentThrough,\r\n        })\r\n        .attr('title', uiStringSearch)\r\n        .append(`\r\n          <div class=\"BRquery\">\r\n            <main>${html}</main>\r\n            <footer>Page ${match.displayPageNumber}</footer>\r\n          </div>\r\n        `)\r\n        .appendTo(this.br.$('.BRnavline'))\r\n        .on(\"mouseenter\", (event) => {\r\n          // remove from other markers then turn on just for this\r\n          // XXX should be done when nav slider moves\r\n          const marker = event.currentTarget;\r\n          const tooltip = marker.querySelector('.BRquery');\r\n          const tooltipOffset = tooltip.getBoundingClientRect();\r\n          const targetOffset = marker.getBoundingClientRect();\r\n          const boxSizeAdjust = parseInt(getComputedStyle(tooltip).paddingLeft) * 2;\r\n          if (tooltipOffset.x - boxSizeAdjust < 0) {\r\n            tooltip.style.setProperty('transform', `translateX(-${targetOffset.left - boxSizeAdjust}px)`);\r\n          }\r\n          $('.BRsearch,.BRchapter').removeClass('front');\r\n          $(event.target).addClass('front');\r\n        })\r\n        .on(\"mouseleave\", (event) => $(event.target).removeClass('front'))\r\n        .on(\"click\", () => { this.br._searchPluginGoToResult(match.matchIndex); });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} bool\r\n   */\r\n  toggleSearchPending(bool) {\r\n    if (bool) {\r\n      this.br.showProgressPopup(\"Search results will appear below...\", () => this.progressPopupClosed());\r\n    }\r\n    else {\r\n      this.br.removeProgressPopup();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Primary callback when user cancels search popup\r\n   */\r\n  progressPopupClosed() {\r\n    this.toggleSearchPending();\r\n    this.cancelSearch();\r\n  }\r\n\r\n  renderErrorModal(textIsProcessing = false) {\r\n    const errorDetails = `${!textIsProcessing ? 'The text may still be processing. ' : ''}Please try again.`;\r\n    this.renderModalMessage(`\r\n      Sorry, there was an error with your search.\r\n      <br />\r\n      ${errorDetails}\r\n    `);\r\n    this.delayModalRemovalFor(4000);\r\n  }\r\n\r\n  renderBookNotIndexedModal() {\r\n    this.renderModalMessage(`\r\n      <p>\r\n         This book hasn't been indexed for searching yet.\r\n         We've just started indexing it, so search should be available soon.\r\n         <br />\r\n         Please try again later. Thanks!\r\n      </p>\r\n    `);\r\n    this.delayModalRemovalFor(5000);\r\n  }\r\n\r\n  renderResultsEmptyModal() {\r\n    this.renderModalMessage('No matches were found.');\r\n    this.delayModalRemovalFor(2000);\r\n  }\r\n\r\n  /**\r\n   * @param {string} messageHTML The innerHTML string used to popupate the modal contents\r\n   */\r\n  renderModalMessage(messageHTML) {\r\n    const modal = document.createElement('div');\r\n    modal.classList.add('BRprogresspopup', 'search_modal');\r\n    modal.innerHTML = messageHTML;\r\n    document.querySelector(this.br.el).append(modal);\r\n  }\r\n\r\n  /**\r\n   * @param {number} timeoutMS\r\n   */\r\n  delayModalRemovalFor(timeoutMS) {\r\n    setTimeout(this.br.removeProgressPopup.bind(this.br), timeoutMS);\r\n  }\r\n\r\n  /**\r\n   * @param {Event} e\r\n   */\r\n  submitHandler(e) {\r\n    e.preventDefault();\r\n    const query = e.target.querySelector('[name=\"query\"]').value;\r\n    if (!query.length) { return false; }\r\n    this.br.search(query);\r\n    this.emptyMatches();\r\n    this.toggleSearchPending(true);\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {Event} e\r\n   * @param {object} properties\r\n   *   @param {object} properties.results\r\n   *   @param {object} properties.options\r\n   */\r\n  handleSearchCallback(e, { results, options }) {\r\n    this.matches = results.matches;\r\n    this.setCurrentMatchIndex();\r\n    this.teardownSearchNavigation();\r\n    this.renderSearchNavigation();\r\n    this.bindSearchNavigationEvents();\r\n    this.renderPins(results.matches);\r\n    this.toggleSearchPending(false);\r\n    if (options.goToFirstResult) {\r\n      $(document).one('BookReader:pageChanged', () => {\r\n        this.br.resize();\r\n      });\r\n    } else {\r\n      this.br.resize();\r\n    }\r\n  }\r\n\r\n  handleSearchStarted() {\r\n    this.emptyMatches();\r\n    this.br.removeSearchHilites();\r\n    this.removeResultPins();\r\n    this.toggleSearchPending(true);\r\n    this.teardownSearchNavigation();\r\n    this.setQuery(this.br.searchTerm);\r\n  }\r\n\r\n  /**\r\n   * Event listener for: `BookReader:SearchCallbackError`\r\n   * @param {CustomEvent} event\r\n   */\r\n  handleSearchCallbackError(event = {}) {\r\n    this.toggleSearchPending(false);\r\n    const isIndexed = event?.detail?.props?.results?.indexed;\r\n    this.renderErrorModal(isIndexed);\r\n  }\r\n\r\n  handleSearchCallbackBookNotIndexed() {\r\n    this.toggleSearchPending(false);\r\n    this.renderBookNotIndexedModal();\r\n  }\r\n\r\n  handleSearchCallbackEmpty() {\r\n    this.toggleSearchPending(false);\r\n    this.renderResultsEmptyModal();\r\n  }\r\n\r\n  bindEvents() {\r\n    const namespace = 'BookReader:';\r\n\r\n    window.addEventListener(`${namespace}SearchCallbackError`, this.handleSearchCallbackError.bind(this));\r\n    $(document).on(`${namespace}SearchCallback`, this.handleSearchCallback.bind(this))\r\n      .on(`${namespace}SearchStarted`, this.handleSearchStarted.bind(this))\r\n      .on(`${namespace}SearchCallbackBookNotIndexed`, this.handleSearchCallbackBookNotIndexed.bind(this))\r\n      .on(`${namespace}SearchCallbackEmpty`, this.handleSearchCallbackEmpty.bind(this))\r\n      .on(`${namespace}pageChanged`, this.updateSearchNavigation.bind(this));\r\n\r\n    this.dom.toolbarSearch.querySelector('form').addEventListener('submit', this.submitHandler.bind(this));\r\n  }\r\n}\r\n\r\nexport default SearchView;\r\n","import { escapeHTML, escapeRegExp } from '../../BookReader/utils.js';\r\n\r\n/**\r\n * @param {string} match\r\n * @param {string} preTag\r\n * @param {string} postTag\r\n * @returns {string}\r\n */\r\nexport function renderMatch(match, preTag, postTag) {\r\n  // Search results are returned as a text blob with the hits wrapped in\r\n  // triple mustaches. Hits occasionally include text beyond the search\r\n  // term, so everything within the staches is captured and wrapped.\r\n  const preTagRe = escapeRegExp(escapeHTML(preTag));\r\n  const postTagRe = escapeRegExp(escapeHTML(postTag));\r\n  // [^] matches any character, including line breaks\r\n  const regex = new RegExp(`${preTagRe}([^]+?)${postTagRe}`, 'g');\r\n  return escapeHTML(match)\r\n    .replace(regex, '<mark>$1</mark>')\r\n    // Fix trailing hyphens. This over-corrects but is net useful.\r\n    .replace(/(\\b)- /g, '$1');\r\n}\r\n\r\n/**\r\n * Attach some fields to search inside results\r\n * @param {SearchInsideResults} results\r\n * @param {(pageNum: LeafNum) => PageNumString} displayPageNumberFn\r\n * @param {string} preTag\r\n * @param {string} postTag\r\n */\r\nexport function marshallSearchResults(results, displayPageNumberFn, preTag, postTag) {\r\n  // Attach matchIndex to a few things to make it easier to identify\r\n  // an active/selected match\r\n  for (const [index, match] of results.matches.entries()) {\r\n    match.matchIndex = index;\r\n    match.displayPageNumber = displayPageNumberFn(match.par[0].page);\r\n    match.html = renderMatch(match.text, preTag, postTag);\r\n    for (const par of match.par) {\r\n      for (const box of par.boxes) {\r\n        box.matchIndex = index;\r\n      }\r\n    }\r\n  }\r\n}\r\n","// @ts-check\r\n/* global BookReader */\r\n/**\r\n * Plugin for Archive.org book search\r\n * NOTE: This script must be loaded AFTER `plugin.mobile_nav.js`\r\n * as it mutates mobile nav drawer\r\n *\r\n * Events fired at various points throughout search processing are published\r\n * on the document DOM element. These can be subscribed to using jQuery's event\r\n * binding method `$.fn.on`. All of the events are prefixed with a BookReader\r\n * namespace. The events are:\r\n *\r\n * @event BookReader:SearchStarted - When a search form is submitted, immediately\r\n *   before an AJAX call is made to request search results\r\n * @event BookReader:SearchCallback - When the search AJAX call is returned and at\r\n *   least one result is returned. The event callback receives an object\r\n *   with the `results`, plugin `options`, and the BookReader `instance`\r\n * @event BookReader:SearchCallbackError - When the AJAX request returns an error.\r\n *   Receives the `results` and `instance`\r\n * @event BookReader:SearchCallbackNotIndexed - When a message is received that\r\n *   the book has not had OCR text indexed yet. Receives `instance`\r\n * @event BookReader:SearchCallbackEmpty - When no results found. Receives\r\n *   `instance`\r\n * @event BookReader:SearchCanceled - When no results found. Receives\r\n *   `instance`\r\n */\r\nimport { poll } from '../../BookReader/utils.js';\r\nimport { renderBoxesInPageContainerLayer } from '../../BookReader/PageContainer.js';\r\nimport SearchView from './view.js';\r\nimport { marshallSearchResults } from './utils.js';\r\n/** @typedef {import('../../BookReader/PageContainer').PageContainer} PageContainer */\r\n/** @typedef {import('../../BookReader/BookModel').PageIndex} PageIndex */\r\n/** @typedef {import('../../BookReader/BookModel').LeafNum} LeafNum */\r\n/** @typedef {import('../../BookReader/BookModel').PageNumString} PageNumString */\r\n\r\njQuery.extend(BookReader.defaultOptions, {\r\n  server: 'ia600609.us.archive.org',\r\n  bookId: '',\r\n  subPrefix: '',\r\n  bookPath: '',\r\n  enableSearch: true,\r\n  searchInsideProtocol: 'https',\r\n  searchInsideUrl: '/fulltext/inside.php',\r\n  searchInsidePreTag: '{{{',\r\n  searchInsidePostTag: '}}}',\r\n  initialSearchTerm: null,\r\n});\r\n\r\n/** @override */\r\nBookReader.prototype.setup = (function (super_) {\r\n  return function (options) {\r\n    super_.call(this, options);\r\n\r\n    this.searchTerm = '';\r\n    this.searchResults = null;\r\n    this.searchInsideUrl = options.searchInsideUrl;\r\n    this.enableSearch = options.enableSearch;\r\n\r\n    // Base server used by some api calls\r\n    this.bookId = options.bookId;\r\n    this.server = options.server;\r\n    this.subPrefix = options.subPrefix;\r\n    this.bookPath = options.bookPath;\r\n\r\n    this.searchXHR = null;\r\n    this._cancelSearch.bind(this);\r\n    this.cancelSearchRequest.bind(this);\r\n\r\n    /** @type { {[pageIndex: number]: SearchInsideMatchBox[]} } */\r\n    this._searchBoxesByIndex = {};\r\n\r\n    this.searchView = undefined;\r\n  };\r\n})(BookReader.prototype.setup);\r\n\r\n/** @override */\r\nBookReader.prototype.init = (function (super_) {\r\n  return function () {\r\n    super_.call(this);\r\n    // give SearchView the most complete bookreader state\r\n    this.searchView = new SearchView({\r\n      br: this,\r\n      searchCancelledCallback: () => {\r\n        this._cancelSearch();\r\n        this.trigger('SearchCanceled', { term: this.searchTerm, instance: this });\r\n      }\r\n    });\r\n    if (this.options.enableSearch && this.options.initialSearchTerm) {\r\n      /**\r\n       * this.search() take two parameter\r\n       * 1. this.options.initialSearchTerm - search term\r\n       * 2. {\r\n       *  goToFirstResult: this.options.goToFirstResult,\r\n       *  suppressFragmentChange: false // always want to change fragment in URL\r\n       * }\r\n       */\r\n      this.search(\r\n        this.options.initialSearchTerm,\r\n        { goToFirstResult: this.options.goToFirstResult, suppressFragmentChange: false }\r\n      );\r\n    }\r\n  };\r\n})(BookReader.prototype.init);\r\n\r\n/** @override */\r\nBookReader.prototype.buildToolbarElement = (function (super_) {\r\n  return function () {\r\n    const $el = super_.call(this);\r\n    if (!this.enableSearch) { return; }\r\n    if (this.searchView.dom.toolbarSearch) {\r\n      $el.find('.BRtoolbarSectionInfo').after(this.searchView.dom.toolbarSearch);\r\n    }\r\n    return $el;\r\n  };\r\n})(BookReader.prototype.buildToolbarElement);\r\n\r\n/** @override */\r\nBookReader.prototype._createPageContainer = (function (super_) {\r\n  return function (index) {\r\n    const pageContainer = super_.call(this, index);\r\n    if (this.enableSearch && pageContainer.page && index in this._searchBoxesByIndex) {\r\n      const pageIndex = pageContainer.page.index;\r\n      const boxes = this._searchBoxesByIndex[pageIndex];\r\n      renderBoxesInPageContainerLayer(\r\n        'searchHiliteLayer',\r\n        boxes,\r\n        pageContainer.page,\r\n        pageContainer.$container[0],\r\n        boxes.map(b => `match-index-${b.matchIndex}`),\r\n      );\r\n    }\r\n    return pageContainer;\r\n  };\r\n})(BookReader.prototype._createPageContainer);\r\n\r\n/**\r\n * @typedef {object} SearchOptions\r\n * @property {boolean} goToFirstResult\r\n * @property {boolean} disablePopup\r\n * @property {(null|function)} error - @deprecated at v.5.0\r\n * @property {(null|function)} success - @deprecated at v.5.0\r\n */\r\n\r\n/**\r\n * Submits search request\r\n *\r\n * @param {string} term\r\n * @param {SearchOptions} overrides\r\n */\r\nBookReader.prototype.search = async function(term = '', overrides = {}) {\r\n  /** @type {SearchOptions} */\r\n  const defaultOptions = {\r\n    goToFirstResult: false, /* jump to the first result (default=false) */\r\n    disablePopup: false,    /* don't show the modal progress (default=false) */\r\n    suppressFragmentChange: false, /* don't change the URL on initial load */\r\n    error: null,            /* optional error handler (default=null) */\r\n    success: null,          /* optional success handler (default=null) */\r\n\r\n  };\r\n  const options = jQuery.extend({}, defaultOptions, overrides);\r\n  this.suppressFragmentChange = options.suppressFragmentChange;\r\n  this.searchCancelled = false;\r\n\r\n  // strip slashes, since this goes in the url\r\n  this.searchTerm = term.replace(/\\//g, ' ');\r\n\r\n  if (!options.suppressFragmentChange) {\r\n    this.trigger(BookReader.eventNames.fragmentChange);\r\n  }\r\n\r\n  // Add quotes to the term. This is to compenstate for the backends default OR query\r\n  // term = term.replace(/['\"]+/g, '');\r\n  // term = '\"' + term + '\"';\r\n\r\n  // Remove the port and userdir\r\n  const serverPath = this.server.replace(/:.+/, '');\r\n  const baseUrl = `${this.options.searchInsideProtocol}://${serverPath}${this.searchInsideUrl}?`;\r\n\r\n  // Remove subPrefix from end of path\r\n  let path = this.bookPath;\r\n  const subPrefixWithSlash = `/${this.subPrefix}`;\r\n  if (this.bookPath.length - this.bookPath.lastIndexOf(subPrefixWithSlash) == subPrefixWithSlash.length) {\r\n    path = this.bookPath.substr(0, this.bookPath.length - subPrefixWithSlash.length);\r\n  }\r\n\r\n  const urlParams = {\r\n    item_id: this.bookId,\r\n    doc: this.subPrefix,\r\n    path,\r\n    q: term,\r\n    pre_tag: this.options.searchInsidePreTag,\r\n    post_tag: this.options.searchInsidePostTag,\r\n  };\r\n\r\n  // NOTE that the API does not expect / (slashes) to be encoded. (%2F) won't work\r\n  const paramStr = $.param(urlParams).replace(/%2F/g, '/');\r\n\r\n  const url = `${baseUrl}${paramStr}`;\r\n\r\n  const callSearchResultsCallback = (searchInsideResults) => {\r\n    if (this.searchCancelled) {\r\n      return;\r\n    }\r\n    const responseHasError = searchInsideResults.error || !searchInsideResults.matches.length;\r\n    const hasCustomError = typeof options.error === 'function';\r\n    const hasCustomSuccess = typeof options.success === 'function';\r\n\r\n    if (responseHasError) {\r\n      console.error('Search Inside Response Error', searchInsideResults.error || 'matches.length == 0');\r\n      hasCustomError\r\n        ? options.error.call(this, searchInsideResults, options)\r\n        : this.BRSearchCallbackError(searchInsideResults, options);\r\n    } else {\r\n      hasCustomSuccess\r\n        ? options.success.call(this, searchInsideResults, options)\r\n        : this.BRSearchCallback(searchInsideResults, options);\r\n    }\r\n  };\r\n\r\n  this.trigger('SearchStarted', { term: this.searchTerm, instance: this });\r\n  callSearchResultsCallback(await $.ajax({\r\n    url: url,\r\n    dataType: 'jsonp',\r\n    cache: true,\r\n    beforeSend: xhr => { this.searchXHR = xhr; },\r\n  }));\r\n};\r\n\r\n/**\r\n * cancels AJAX Call\r\n * emits custom event\r\n */\r\nBookReader.prototype._cancelSearch = function () {\r\n  this.searchXHR?.abort();\r\n  this.searchView.clearSearchFieldAndResults(false);\r\n  this.searchTerm = '';\r\n  this.searchXHR = null;\r\n  this.searchCancelled = true;\r\n  this.searchResults = [];\r\n};\r\n\r\n/**\r\n * External function to cancel search\r\n * checks for term & xhr in flight before running\r\n */\r\nBookReader.prototype.cancelSearchRequest = function () {\r\n  this.searchCancelled = true;\r\n  if (this.searchXHR !== null) {\r\n    this._cancelSearch();\r\n    this.searchView.toggleSearchPending();\r\n    this.trigger('SearchCanceled', { term: this.searchTerm, instance: this });\r\n  }\r\n};\r\n\r\n/**\r\n  * @typedef {object} SearchInsideMatchBox\r\n  * @property {number} page\r\n  * @property {number} r\r\n  * @property {number} l\r\n  * @property {number} b\r\n  * @property {number} t\r\n  * @property {HTMLDivElement} [div]\r\n  * @property {number} matchIndex This is a fake field! not part of the API response. The index of the match that contains this box in total search results matches.\r\n  */\r\n\r\n/**\r\n * @typedef {object} SearchInsideMatch\r\n * @property {number} matchIndex This is a fake field! Not part of the API response. It is added by the JS.\r\n * @property {string} displayPageNumber (fake field) The page number as it should be displayed in the UI.\r\n * @property {string} html (computed field) The html-escaped raw html to display in the UI.\r\n * @property {string} text\r\n * @property {Array<{ page: number, boxes: SearchInsideMatchBox[] }>} par\r\n */\r\n\r\n/**\r\n * @typedef {object} SearchInsideResults\r\n * @property {string} error\r\n * @property {SearchInsideMatch[]} matches\r\n * @property {boolean} indexed\r\n */\r\n\r\n/**\r\n * Search Results return handler\r\n * @param {SearchInsideResults} results\r\n * @param {object} options\r\n * @param {boolean} options.goToFirstResult\r\n */\r\nBookReader.prototype.BRSearchCallback = function(results, options) {\r\n  marshallSearchResults(\r\n    results,\r\n    pageNum => this.book.getPageNum(this.book.leafNumToIndex(pageNum)),\r\n    this.options.searchInsidePreTag,\r\n    this.options.searchInsidePostTag,\r\n  );\r\n  this.searchResults = results || [];\r\n\r\n  this.updateSearchHilites();\r\n  this.removeProgressPopup();\r\n  if (options.goToFirstResult) {\r\n    this._searchPluginGoToResult(0);\r\n  }\r\n  this.trigger('SearchCallback', { results, options, instance: this });\r\n};\r\n\r\n/**\r\n * Main search results error handler\r\n * @callback\r\n * @param {SearchInsideResults} results\r\n */\r\nBookReader.prototype.BRSearchCallbackError = function(results) {\r\n  this._BRSearchCallbackError(results);\r\n};\r\n\r\n/**\r\n * @private draws search results error\r\n * @callback\r\n * @param {SearchInsideResults} results\r\n * @param {jQuery} $el\r\n * @param {boolean} fade\r\n */\r\nBookReader.prototype._BRSearchCallbackError = function(results) {\r\n  this.searchResults = results;\r\n  const basePayload = {\r\n    term: this.searchTerm,\r\n    instance: this,\r\n  };\r\n  if (results.error) {\r\n    const payload = Object.assign({}, basePayload, { results });\r\n    this.trigger('SearchCallbackError', payload);\r\n  } else if (0 == results.matches.length) {\r\n    if (false === results.indexed) {\r\n      this.trigger('SearchCallbackBookNotIndexed', basePayload);\r\n      return;\r\n    }\r\n    this.trigger('SearchCallbackEmpty', basePayload);\r\n  }\r\n};\r\n\r\n/**\r\n * updates search on-page highlights controller\r\n */\r\nBookReader.prototype.updateSearchHilites = function() {\r\n  /** @type {SearchInsideMatch[]} */\r\n  const matches = this.searchResults?.matches || [];\r\n  /** @type { {[pageIndex: number]: SearchInsideMatchBox[]} } */\r\n  const boxesByIndex = {};\r\n\r\n  // Clear any existing svg layers\r\n  this.removeSearchHilites();\r\n\r\n  // Group by pageIndex\r\n  for (const match of matches) {\r\n    for (const box of match.par[0].boxes) {\r\n      const pageIndex = this.book.leafNumToIndex(box.page);\r\n      const pageBoxes = boxesByIndex[pageIndex] || (boxesByIndex[pageIndex] = []);\r\n      pageBoxes.push(box);\r\n    }\r\n  }\r\n\r\n  // update any already created pages\r\n  for (const [pageIndexString, boxes] of Object.entries(boxesByIndex)) {\r\n    const pageIndex = parseFloat(pageIndexString);\r\n    const page = this.book.getPage(pageIndex);\r\n    const pageContainers = this.getActivePageContainerElementsForIndex(pageIndex);\r\n    for (const container of pageContainers) {\r\n      renderBoxesInPageContainerLayer('searchHiliteLayer', boxes, page, container, boxes.map(b => `match-index-${b.matchIndex}`));\r\n    }\r\n  }\r\n\r\n  this._searchBoxesByIndex = boxesByIndex;\r\n};\r\n\r\n/**\r\n * remove search highlights\r\n */\r\nBookReader.prototype.removeSearchHilites = function() {\r\n  $(this.getActivePageContainerElements()).find('.searchHiliteLayer').remove();\r\n};\r\n\r\n/**\r\n * @private\r\n * Goes to the page specified. If the page is not viewable, tries to load the page\r\n * FIXME Most of this logic is IA specific, and should be less integrated into here\r\n * or at least more configurable.\r\n * @param {number} matchIndex\r\n */\r\nBookReader.prototype._searchPluginGoToResult = async function (matchIndex) {\r\n  const match = this.searchResults?.matches[matchIndex];\r\n  const book = this.book;\r\n  const pageIndex = book.leafNumToIndex(match.par[0].page);\r\n  const page = book.getPage(pageIndex);\r\n  const onNearbyPage = Math.abs(this.currentIndex() - pageIndex) < 3;\r\n  let makeUnviewableAtEnd = false;\r\n  if (!page.isViewable) {\r\n    const resp = await fetch('/services/bookreader/request_page?' + new URLSearchParams({\r\n      id: this.options.bookId,\r\n      subprefix: this.options.subPrefix,\r\n      leafNum: page.leafNum,\r\n    })).then(r => r.json());\r\n\r\n    for (const leafNum of resp.value) {\r\n      book.getPage(book.leafNumToIndex(leafNum)).makeViewable();\r\n    }\r\n\r\n    // not able to show page; make the page viewable anyways so that it can\r\n    // actually open. On IA, it has a fallback to a special error page.\r\n    if (!resp.value.length) {\r\n      book.getPage(pageIndex).makeViewable();\r\n      makeUnviewableAtEnd = true;\r\n    }\r\n\r\n    // Trigger an update of book\r\n    this._modes.mode1Up.mode1UpLit.updatePages();\r\n    if (this.activeMode == this._modes.mode1Up) {\r\n      await this._modes.mode1Up.mode1UpLit.updateComplete;\r\n    }\r\n  }\r\n  /* this updates the URL */\r\n  if (!this._isIndexDisplayed(pageIndex)) {\r\n    this.suppressFragmentChange = false;\r\n    this.jumpToIndex(pageIndex);\r\n  }\r\n\r\n  // Reset it to unviewable if it wasn't resolved\r\n  if (makeUnviewableAtEnd) {\r\n    book.getPage(pageIndex).makeViewable(false);\r\n  }\r\n\r\n  // Scroll/flash in the ui\r\n  const $boxes = await poll(() => $(`rect.match-index-${match.matchIndex}`), { until: result => result.length > 0 });\r\n  if ($boxes.length) {\r\n    $boxes.css('animation', 'none');\r\n    $boxes[0].scrollIntoView({\r\n      // Only vertically center the highlight if we're in 1up or in full screen. In\r\n      // 2up, if we're not fullscreen, the whole body gets scrolled around to try to\r\n      // center the highlight 🙄 See:\r\n      // https://stackoverflow.com/questions/11039885/scrollintoview-causing-the-whole-page-to-move/11041376\r\n      // Note: nearest doesn't quite work great, because the ReadAloud toolbar is now\r\n      // full-width, and covers up the last line of the highlight.\r\n      block: this.constMode1up == this.mode || this.isFullscreenActive ? 'center' : 'nearest',\r\n      inline: 'center',\r\n      behavior: onNearbyPage ? 'smooth' : 'auto',\r\n    });\r\n    // wait for animation to start\r\n    await new Promise(resolve => setTimeout(resolve, 100));\r\n    $boxes.removeAttr(\"style\");\r\n  }\r\n};\r\n\r\n/**\r\n * Removes all search pins\r\n */\r\nBookReader.prototype.removeSearchResults = function(suppressFragmentChange = false) {\r\n  this.removeSearchHilites(); //be sure to set all box.divs to null\r\n  this.searchTerm = null;\r\n  this.searchResults = null;\r\n  if (!suppressFragmentChange) {\r\n    this.trigger(BookReader.eventNames.fragmentChange);\r\n  }\r\n};\r\n\r\n/**\r\n * Returns true if a search highlight is currently being displayed\r\n * @returns {boolean}\r\n */\r\nBookReader.prototype.searchHighlightVisible = function() {\r\n  const results = this.searchResults;\r\n  let visiblePages = [];\r\n  if (null == results) return false;\r\n\r\n  if (this.constMode2up == this.mode) {\r\n    visiblePages = [this.twoPage.currentIndexL, this.twoPage.currentIndexR];\r\n  } else if (this.constMode1up == this.mode) {\r\n    visiblePages = [this.currentIndex()];\r\n  } else {\r\n    return false;\r\n  }\r\n\r\n  results.matches.some(match => {\r\n    return match.par[0].boxes.some(box => {\r\n      const pageIndex = this.book.leafNumToIndex(box.page);\r\n      if (jQuery.inArray(pageIndex, visiblePages) >= 0) {\r\n        return true;\r\n      }\r\n    });\r\n  });\r\n\r\n  return false;\r\n};\r\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar charAt = uncurryThis(''.charAt);\nvar n$ParseFloat = global.parseFloat;\nvar Symbol = global.Symbol;\nvar ITERATOR = Symbol && Symbol.iterator;\nvar FORCED = 1 / n$ParseFloat(whitespaces + '-0') !== -Infinity\n  // MS Edge 18- broken with boxed symbols\n  || (ITERATOR && !fails(function () { n$ParseFloat(Object(ITERATOR)); }));\n\n// `parseFloat` method\n// https://tc39.es/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(toString(string));\n  var result = n$ParseFloat(trimmedString);\n  return result === 0 && charAt(trimmedString, 0) == '-' ? -0 : result;\n} : n$ParseFloat;\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.es/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","var $ = require('../internals/export');\nvar $parseFloat = require('../internals/number-parse-float');\n\n// `parseFloat` method\n// https://tc39.es/ecma262/#sec-parsefloat-string\n$({ global: true, forced: parseFloat != $parseFloat }, {\n  parseFloat: $parseFloat\n});\n"],"names":["SearchView","br","searchCancelledCallback","this","matches","cacheDOMElements","bindEvents","cancelSearch","dom","toolbarSearch","buildToolbarSearch","query","$","val","remove","dispatchEventWhenComplete","removeSearchResults","removeResultPins","emptyMatches","setQuery","teardownSearchNavigation","trigger","selector","before","resultsPosition","searchNavigation","positionMessage","length","currentMatchIndex","namespace","on","clearSearchFieldAndResults","bind","showPrevResult","showNextResult","toggleSidebar","mode","constModeThumb","switchMode","constMode1up","getClosestMatchIndex","start","end","comparator","eq","click","updateResultsPosition","updateSearchNavigationButtons","comparisonFn","closestPage","closestTo","pool","slice","map","m","par","page","currentIndex","indexOf","find","text","attr","off","resize","matchingSearchResult","constMode2up","find2upMatchingSearchResult","find1upMatchingSearchResult","_isIndexDisplayed","setCurrentMatchIndex","bool","pinsVisibleState","refs","$BRfooter","css","visibility","document","createElement","classList","add","innerHTML","forEach","match","pageIndex","book","leafNumToIndex","percentThrough","constructor","util","cssPercentage","getNumLeafs","html","Math","max","substring","replace","addClass","left","append","displayPageNumber","appendTo","event","marker","currentTarget","tooltip","querySelector","tooltipOffset","getBoundingClientRect","targetOffset","boxSizeAdjust","parseInt","getComputedStyle","paddingLeft","x","style","setProperty","removeClass","target","_searchPluginGoToResult","matchIndex","showProgressPopup","progressPopupClosed","removeProgressPopup","toggleSearchPending","textIsProcessing","errorDetails","renderModalMessage","delayModalRemovalFor","messageHTML","modal","el","timeoutMS","setTimeout","e","preventDefault","value","search","results","options","renderSearchNavigation","bindSearchNavigationEvents","renderPins","goToFirstResult","one","removeSearchHilites","searchTerm","isIndexed","detail","props","indexed","renderErrorModal","renderBookNotIndexedModal","renderResultsEmptyModal","window","addEventListener","handleSearchCallbackError","handleSearchCallback","handleSearchStarted","handleSearchCallbackBookNotIndexed","handleSearchCallbackEmpty","updateSearchNavigation","submitHandler","renderMatch","preTag","postTag","preTagRe","escapeRegExp","escapeHTML","postTagRe","regex","RegExp","super_","jQuery","extend","BookReader","defaultOptions","server","bookId","subPrefix","bookPath","enableSearch","searchInsideProtocol","searchInsideUrl","searchInsidePreTag","searchInsidePostTag","initialSearchTerm","prototype","setup","call","searchResults","searchXHR","_cancelSearch","cancelSearchRequest","_searchBoxesByIndex","searchView","undefined","init","term","instance","suppressFragmentChange","buildToolbarElement","$el","after","_createPageContainer","index","pageContainer","boxes","renderBoxesInPageContainerLayer","$container","b","overrides","disablePopup","error","success","searchCancelled","eventNames","fragmentChange","serverPath","baseUrl","path","subPrefixWithSlash","lastIndexOf","substr","urlParams","item_id","doc","q","pre_tag","post_tag","paramStr","param","url","callSearchResultsCallback","searchInsideResults","responseHasError","hasCustomError","hasCustomSuccess","console","BRSearchCallbackError","BRSearchCallback","ajax","dataType","cache","beforeSend","xhr","abort","displayPageNumberFn","pageNum","entries","getPageNum","marshallSearchResults","updateSearchHilites","_BRSearchCallbackError","basePayload","payload","Object","assign","boxesByIndex","box","push","pageIndexString","parseFloat","getPage","getActivePageContainerElementsForIndex","container","getActivePageContainerElements","onNearbyPage","abs","makeUnviewableAtEnd","isViewable","fetch","URLSearchParams","id","subprefix","leafNum","then","r","json","resp","makeViewable","_modes","mode1Up","mode1UpLit","updatePages","activeMode","updateComplete","jumpToIndex","poll","until","result","$boxes","scrollIntoView","block","isFullscreenActive","inline","behavior","Promise","resolve","removeAttr","searchHighlightVisible","visiblePages","twoPage","currentIndexL","currentIndexR","some","inArray","global","fails","uncurryThis","toString","trim","whitespaces","charAt","n$ParseFloat","Symbol","ITERATOR","iterator","FORCED","module","exports","string","trimmedString","$entries","stat","O","$parseFloat","forced"],"sourceRoot":""}